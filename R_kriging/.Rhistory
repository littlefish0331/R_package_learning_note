rm(list = ls()); invisible(gc())
library(knitr)
library(dplyr)
library(data.table)
opts_chunk$set(echo = TRUE)
library(sp)
library(gstat)
rm(list = ls()); invisible(gc())
library(knitr)
library(dplyr)
library(data.table)
library(sp)
library(gstat)
library(dplyr) # for "glimpse"
library(ggplot2)
library(scales) # for "comma"
opts_chunk$set(echo = TRUE)
data(meuse)
glimpse(meuse)
meuse %>% str
data(meuse)
meuse %>% str
glimpse(meuse)
rm(list = ls()); invisible(gc())
library(knitr)
library(dplyr)
library(data.table)
library(sp)
library(gstat)
library(dplyr) # for "glimpse"
library(ggplot2)
library(scales) # for "comma"
opts_chunk$set(echo = TRUE)
data(meuse)
glimpse(meuse) #功能和 meuse %>% str 相同。
rm(list = ls()); invisible(gc())
library(knitr)
library(dplyr)
library(data.table)
library(sp)
library(gstat)
library(dplyr) # for "glimpse"
library(ggplot2)
library(scales) # for "comma"
opts_chunk$set(echo = TRUE)
data(meuse)
glimpse(meuse) #功能和 meuse %>% str 相同。
rm(list = ls()); invisible(gc())
library(knitr)
library(dplyr)
library(data.table)
library(sp)
library(gstat)
library(dplyr) # for "glimpse"
library(ggplot2)
library(scales) # for "comma"
opts_chunk$set(echo = TRUE)
rm(list = ls()); invisible(gc())
library(knitr)
library(dplyr)
library(data.table)
library(sp)
library(gstat)
library(dplyr) # for "glimpse"
library(ggplot2)
library(scales) # for "comma"
opts_chunk$set(echo = TRUE)
data(meuse)
glimpse(meuse) #功能和 meuse %>% str 相同。
meuse %>% as.data.frame
meuse
meuse %>% as.data.frame %>%
ggplot(aes(x, y)) + geom_point(aes(size=zinc), color="blue", alpha=3/4) +
ggtitle("Zinc Concentration (ppm)") + coord_equal() + theme_bw()
meuse %>% as.data.frame %>%
ggplot(aes(x, y)) + geom_point(aes(size=zinc), color="blue", alpha=3/4) +
ggtitle("Zinc Concentration (ppm)") + coord_equal() + theme_bw()
class(meuse)
str(meuse)
coordinates(meuse) <- ~ x + y
class(meuse)
str(meuse)
class(meuse)
str(meuse)
# access various slots of the SPDF
bbox(meuse)
coordinates(meuse) %>% glimpse
proj4string(meuse)
identical( bbox(meuse), meuse@bbox )
identical( coordinates(meuse), meuse@coords )
identical( coordinates(meuse), meuse@coords )
coordinates(meuse) %>% glimpse
# access various slots of the SPDF
bbox(meuse)
identical( bbox(meuse), meuse@bbox )
coordnames(meuse)
meuse@data %>% glimpse
meuse %>% as.data.frame %>% glimpse
lzn.vgm <- variogram(log(zinc)~1, meuse) # calculates sample variogram values
lzn.vgm1 <- variogram(object = log(zinc)~1, locations = meuse) # calculates sample variogram values
identical(lzn.vgm, lzn.vgm1)
lzn.vgm <- variogram(log(zinc)~1, meuse) # calculates sample variogram values
lzn.vgm
lzn.fit <- fit.variogram(object = lzn.vgm, model = vgm(1, "Sph", 900, 1)) # fit model
lzn.fit
lzn.fit <- fit.variogram(object = lzn.vgm,
model = vgm(psill = 1, model = "Sph",
range = 900, nugget = 1)) # fit model
lzn.fit
meuse
rm(list = ls()); invisible(gc())
library(knitr)
library(dplyr)
library(data.table)
library(sp)
library(gstat)
library(dplyr) # for "glimpse"
library(ggplot2)
library(scales) # for "comma"
opts_chunk$set(echo = TRUE)
data(meuse)
glimpse(meuse) #功能和 meuse %>% str 相同。
meuse %>% as.data.frame %>%
ggplot(aes(x, y)) + geom_point(aes(size=zinc), color="blue", alpha=3/4) +
ggtitle("Zinc Concentration (ppm)") + coord_equal() + theme_bw()
class(meuse)
str(meuse)
coordinates(meuse) <- ~ x + y
class(meuse)
str(meuse)
# access various slots of the SPDF
bbox(meuse)
identical( bbox(meuse), meuse@bbox )
coordinates(meuse) %>% glimpse
identical( coordinates(meuse), meuse@coords )
proj4string(meuse)
coordnames(meuse)
meuse@data %>% glimpse
meuse %>% as.data.frame %>% glimpse
meuse
log(zinc)~1
lzn.vgm <- variogram(log(zinc)~1, meuse) # calculates sample variogram values
lzn.vgm <- variogram(log(zinc)~., meuse) # calculates sample variogram values
vgm()
show.vgms
show.vgms()
vgm()
show.vgms()
show.vgms(n = 5)
show.vgms(n = 20)
show.vgms()
plot(lzn.vgm, lzn.fit) # plot the sample values, along with the fit model
lzn.vgm <- variogram(log(zinc)~1, meuse) # calculates sample variogram values
lzn.fit <- fit.variogram(object = lzn.vgm,
model = vgm(psill = 1, model = "Sph",
range = 900, nugget = 1)) # fit model
plot(lzn.vgm, lzn.fit) # plot the sample values, along with the fit model
lzn.vgm
lzn.fit
lzn.vgm
plot(lzn.vgm, lzn.fit) # plot the sample values, along with the fit model
lzn.fit
lzn.vgm
# load spatial domain to interpolate over
data("meuse.grid")
# to compare, recall the bubble plot above; those points were what there were values for. this is much more sparse
plot1 <- meuse %>% as.data.frame %>%
ggplot(aes(x, y)) + geom_point(size=1) + coord_equal() +
ggtitle("Points with measurements")
# this is clearly gridded over the region of interest
plot2 <- meuse.grid %>% as.data.frame %>%
ggplot(aes(x, y)) + geom_point(size=1) + coord_equal() +
ggtitle("Points at which to estimate")
library(gridExtra)
grid.arrange(plot1, plot2, ncol = 2)
# load spatial domain to interpolate over
data("meuse.grid")
# to compare, recall the bubble plot above;
# those points were what there were values for.
# this is much more sparse
# 比較一下，回想上面的氣泡圖;
# 這些點是有價值的。
# 這更稀疏
plot1 <- meuse %>% as.data.frame %>%
ggplot(aes(x, y)) + geom_point(size=1) + coord_equal() +
ggtitle("Points with measurements")
# this is clearly gridded over the region of interest
# 這顯然是在感興趣的區域內
plot2 <- meuse.grid %>% as.data.frame %>%
ggplot(aes(x, y)) + geom_point(size=1) + coord_equal() +
ggtitle("Points at which to estimate")
library(gridExtra)
grid.arrange(plot1, plot2, ncol = 2)
coordinates(meuse.grid) <- ~ x + y # step 3 above
lzn.kriged <- krige(formula = log(zinc) ~ 1,
locations = meuse,
data = meuse.grid,
model = lzn.fit)
lzn.kriged <- krige(formula = log(zinc) ~ 1,
data = meuse,
newdata = meuse.grid,
model = lzn.fit)
coordinates(meuse.grid) <- ~ x + y # step 3 above
lzn.kriged <- krige(log(zinc) ~ 1, meuse, meuse.grid, model=lzn.fit)
coordinates(meuse.grid) <- ~ x + y # step 3 above
lzn.kriged <- krige(log(zinc) ~ 1, meuse, meuse.grid, model=lzn.fit)
# load spatial domain to interpolate over
data("meuse.grid")
# to compare, recall the bubble plot above;
# those points were what there were values for.
# this is much more sparse
# 比較一下，回想上面的氣泡圖;
# 這些點是有價值的。
# 這更稀疏
plot1 <- meuse %>% as.data.frame %>%
ggplot(aes(x, y)) + geom_point(size=1) + coord_equal() +
ggtitle("Points with measurements")
# this is clearly gridded over the region of interest
# 這顯然是在感興趣的區域內
plot2 <- meuse.grid %>% as.data.frame %>%
ggplot(aes(x, y)) + geom_point(size=1) + coord_equal() +
ggtitle("Points at which to estimate")
library(gridExtra)
grid.arrange(plot1, plot2, ncol = 2)
coordinates(meuse.grid) <- ~ x + y # step 3 above
lzn.kriged <- krige(log(zinc) ~ 1, meuse, meuse.grid, model=lzn.fit)
lzn.kriged <- krige(formula = log(zinc) ~ 1, meuse, meuse.grid, model = lzn.fit)
meuse %>% str
meuse.grid %>% str
lzn.kriged <- krige(formula = log(zinc) ~ 1, data = meuse, newdata = meuse.grid, model = lzn.fit)
lzn.kriged <- krige(formula = log(zinc) ~ 1, data = meuse, meuse.grid, model = lzn.fit)
lzn.kriged <- krige(formula = log(zinc) ~ 1, locations = meuse, newdata = meuse.grid, model = lzn.fit)
lzn.kriged
lzn.kriged %>% as.data.frame %>%
ggplot(aes(x=x, y=y)) + geom_tile(aes(fill=var1.pred)) + coord_equal() +
scale_fill_gradient(low = "yellow", high="red") +
scale_x_continuous(labels=comma) + scale_y_continuous(labels=comma) +
theme_bw()
